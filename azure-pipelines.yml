trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  majorVersion: 4
  minorVersion: 0
  patchVersion: 1
  buildVersion: $(majorVersion).$(minorVersion).$(patchVersion)

steps:
- script: dotnet build --configuration $(buildConfiguration) -p:Version=$(buildVersion)
  displayName: 'dotnet build $(buildConfiguration)'
  
- script: |
    sqllocaldb create "SqlBatis" 13.0 -s  
    sqlcmd -S (localdb)\SqlBatis -E -i .\test\SqlBatis.DataMapper.Test\Scripts\MSSQL\DataBase.sql
  displayName: 'Setup LocalDB for Tests'
  
- task: DotNetCoreCLI@2
  displayName: Unit Tests
  inputs:
    command: test
    projects: 'test/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: MSSQL Tests
  inputs:
    command: test
    projects: 'test/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --filter Category=MSSQL'

- task: DotNetCoreCLI@2
  displayName: Create CI Package
  inputs:
    command: pack
    nobuild: true
    requestedMajorVersion: $(majorVersion)
    requestedMinorVersion: $(minorVersion)
    requestedPatchVersion: $(patchVersion)
    versioningScheme : byPrereleaseNumber
    packDirectory: '$(Build.ArtifactStagingDirectory)/CI'
    packagesToPack: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Create Release Package
  inputs:
    command: pack
    nobuild: true
    versioningScheme: byEnvVar
    versionEnvVar: buildVersion
    packDirectory: '$(Build.ArtifactStagingDirectory)/Public'
    packagesToPack: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'packages' 
